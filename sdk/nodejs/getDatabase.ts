// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getDatabase(args: GetDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("turso:index:getDatabase", {
        "databaseName": args.databaseName,
        "organizationName": args.organizationName,
    }, opts);
}

export interface GetDatabaseArgs {
    databaseName: string;
    organizationName: string;
}

export interface GetDatabaseResult {
    /**
     * The database universal unique identifier (UUID).
     */
    readonly dbId: string;
    /**
     * The name of the group where the database was created.
     */
    readonly groupName: string;
    /**
     * The DNS hostname used for client libSQL and HTTP connections.
     */
    readonly hostName: string;
    /**
     * The database name, unique across your organization.
     */
    readonly name: string;
    /**
     * The name of the organization or user that created the database.
     */
    readonly organizationName: string;
}
export function getDatabaseOutput(args: GetDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getDatabase(a, opts))
}

export interface GetDatabaseOutputArgs {
    databaseName: pulumi.Input<string>;
    organizationName: pulumi.Input<string>;
}
