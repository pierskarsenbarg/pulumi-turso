// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Turso
{
    public static class GetGroup
    {
        public static Task<GetGroupResult> InvokeAsync(GetGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("turso:index:getGroup", args ?? new GetGroupArgs(), options.WithDefaults());

        public static Output<GetGroupResult> Invoke(GetGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupResult>("turso:index:getGroup", args ?? new GetGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("groupName", required: true)]
        public string GroupName { get; set; } = null!;

        [Input("organizationName", required: true)]
        public string OrganizationName { get; set; } = null!;

        public GetGroupArgs()
        {
        }
        public static new GetGroupArgs Empty => new GetGroupArgs();
    }

    public sealed class GetGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        [Input("organizationName", required: true)]
        public Input<string> OrganizationName { get; set; } = null!;

        public GetGroupInvokeArgs()
        {
        }
        public static new GetGroupInvokeArgs Empty => new GetGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupResult
    {
        /// <summary>
        /// The current libSQL server version the databases in that group are running.
        /// </summary>
        public readonly string DbVersion;
        /// <summary>
        /// The group universal unique identifier (UUID).
        /// </summary>
        public readonly string GroupId;
        /// <summary>
        /// An array of location keys the group is located.
        /// </summary>
        public readonly ImmutableArray<string> Locations;
        /// <summary>
        /// The group name, unique across your organization.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The name of the organization or user.
        /// </summary>
        public readonly string Organization;
        /// <summary>
        /// The primary location key.
        /// </summary>
        public readonly string PrimaryLocation;

        [OutputConstructor]
        private GetGroupResult(
            string dbVersion,

            string groupId,

            ImmutableArray<string> locations,

            string name,

            string organization,

            string primaryLocation)
        {
            DbVersion = dbVersion;
            GroupId = groupId;
            Locations = locations;
            Name = name;
            Organization = organization;
            PrimaryLocation = primaryLocation;
        }
    }
}
