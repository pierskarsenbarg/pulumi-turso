// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Turso
{
    public static class GetDatabase
    {
        public static Task<GetDatabaseResult> InvokeAsync(GetDatabaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseResult>("turso:index:getDatabase", args ?? new GetDatabaseArgs(), options.WithDefaults());

        public static Output<GetDatabaseResult> Invoke(GetDatabaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseResult>("turso:index:getDatabase", args ?? new GetDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseArgs : global::Pulumi.InvokeArgs
    {
        [Input("databaseName", required: true)]
        public string DatabaseName { get; set; } = null!;

        [Input("organizationName", required: true)]
        public string OrganizationName { get; set; } = null!;

        public GetDatabaseArgs()
        {
        }
        public static new GetDatabaseArgs Empty => new GetDatabaseArgs();
    }

    public sealed class GetDatabaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        [Input("organizationName", required: true)]
        public Input<string> OrganizationName { get; set; } = null!;

        public GetDatabaseInvokeArgs()
        {
        }
        public static new GetDatabaseInvokeArgs Empty => new GetDatabaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseResult
    {
        /// <summary>
        /// The database universal unique identifier (UUID).
        /// </summary>
        public readonly string DbId;
        /// <summary>
        /// The name of the group where the database was created.
        /// </summary>
        public readonly string GroupName;
        /// <summary>
        /// The DNS hostname used for client libSQL and HTTP connections.
        /// </summary>
        public readonly string HostName;
        /// <summary>
        /// The database name, unique across your organization.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The name of the organization or user that created the database.
        /// </summary>
        public readonly string OrganizationName;

        [OutputConstructor]
        private GetDatabaseResult(
            string dbId,

            string groupName,

            string hostName,

            string name,

            string organizationName)
        {
            DbId = dbId;
            GroupName = groupName;
            HostName = hostName;
            Name = name;
            OrganizationName = organizationName;
        }
    }
}
