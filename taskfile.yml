version: '3'

vars:
  VERSION: 
    sh: pulumictl get version
  VERSION_PATH: main.Version
  PROVIDER_NAME: turso
  PROVIDER: pulumi-resource-{{.PROVIDER_NAME}}
  PROJECT: github.com/pierskarsenbarg/pulumi-{{.PROVIDER_NAME}}
  SDK_DIR: sdk

tasks:
  clean:
    cmds:
      - rm -rf ./bin
      - rm -rf .task
      - rm -f schema.json
  ensure:
    cmds:
      - go mod tidy
      - cd sdk && go mod tidy
  build_provider:
    deps: [ensure]
    sources:
      - '*.go'
      - 'internal/**/*.go'
      - 'pkg/**/*.go'
      - 'go.*'
    generates:
      - bin/pulumi-resource-{{.PROVIDER_NAME}}
    cmds:
      - go build -o bin/{{.PROVIDER}} -ldflags "-X {{.PROJECT}}/{{.VERSION_PATH}}={{.VERSION}}"
  get_schema:
    deps: [build_provider]
    cmds:
      - rm -f schema.json
      - pulumi package get-schema ./bin/{{.PROVIDER}} >> schema.json
  generate_dotnet_sdk:
    cmds: 
      - rm -rf {{.SDK_DIR}}/dotnet
      - pulumi package gen-sdk ./bin/{{.PROVIDER}} --language dotnet
      - |
        cd {{.SDK_DIR}}/dotnet/ && \
        echo "{{.DOTNET_VERSION}}" >version.txt && \
        dotnet build /p:Version={{.DOTNET_VERSION}}
    vars:
      DOTNET_VERSION: 
        sh: pulumictl get version --language dotnet
  generate_nodejs_sdk:
    cmds: 
      - rm -rf {{.SDK_DIR}}/nodejs
      - pulumi package gen-sdk ./bin/{{.PROVIDER}} --language nodejs
      - | 
        cd {{.SDK_DIR}}/nodejs/ && \
          bun install --yarn && \
          yarn run tsc && \
          cp ../../README.md ../../LICENSE package.json yarn.lock bin/ && \
          sed -i.bak 's/${{.NODEJS_VERSION}}/{{.NODEJS_VERSION}}/g' bin/package.json && \
          rm ./bin/package.json.bak
    vars:
      NODEJS_VERSION:
        sh: pulumictl get version --language javascript
  generate_go_sdk:
    cmds: 
      - rm -rf {{.SDK_DIR}}/go
      - pulumi package gen-sdk ./bin/{{.PROVIDER}} --language go
  generate_python_sdk:
    cmds:
      - rm -rf {{.SDK_DIR}}/python
      - pulumi package gen-sdk ./bin/{{.PROVIDER}} --language python
      - cp README.md {{.SDK_DIR}}/python/
      - |
        cd {{.SDK_DIR}}/python/ && \
          python3 setup.py clean --all && \
          rm -rf ./bin/ ../python.bin/ && cp -R . ../python.bin && mv ../python.bin ./bin && \
          sed -i.bak -e 's/^VERSION = .*/VERSION = "{{.PYTHON_VERSION}}"/g' -e 's/^PLUGIN_VERSION = .*/PLUGIN_VERSION = "{{.PYTHON_VERSION}}"/g' ./bin/setup.py && \
          rm ./bin/setup.py.bak && \
          cd ./bin && python3 setup.py build sdist
    vars:
      PYTHON_VERSION: 
        sh: pulumictl get version --language python
  generate_sdks:
    deps: [build_provider]
    cmds:
      - task: generate_nodejs_sdk
      - task: generate_dotnet_sdk
      - task: generate_go_sdk
      - task: generate_python_sdk
  watch:
    watch: true
    sources:
      - '**/*.go'
    interval: 500ms
    cmds:
      - echo "Re-building provider"
      - task: build_provider